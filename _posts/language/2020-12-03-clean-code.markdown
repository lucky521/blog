---
title: "高质量代码"
categories: [Language]
layout: post
---

# 高质量代码的特征





# 高质量代码的例子



# 高质量代码的原则

SLAP 抽象层次一致性原则


# 维护高质量代码的工具

强制code checker工具（cpplint，语法、对齐、命名

CodeReview利益 （靠人的主动是不行的，需要利益来支持

持续集成

自动化测试

单元测试


# trade-off

## "临时方案"

“先这样，下次一定”。

## 代码质量和功能时效的trade-off

代码是服务于功能和产品的，抛开后者说问题，就会过于理想主义，而实际上，许多情况下，我们没有能力或者必要极度的高质量，产品功能尽快实现比质量更为重要。

## 代码质量和人力资源

维持高的代码的质量，短期拖慢进度？长期加快进度？
